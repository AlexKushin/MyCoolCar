server.port=5000
app.dev.frontend.local=http://localhost:4200

spring.datasource.url=jdbc:postgresql://localhost:5433/my_cool_car
spring.datasource.username=postgres
spring.datasource.password=password
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true

#######Google Cloud Storage#######
spring.cloud.gcp.project-id=${SPRING_CLOUD_GCP_PROJECT_ID}
#spring.cloud.gcp.credentials.location=${SPRING_CLOUD_GCP_CREDENTIALS_LOCATION}
gcp.bucket.name=mcc_image_storage

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


logging.level.org.springframework = debug

################### JavaMail Configuration ##########################
support.email=${SUPPORT_EMAIL}
spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.protocol=smtps
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.transport.protocol=smtps
spring.mail.properties.mail.smtps.auth=true
spring.mail.properties.mail.smtps.starttls.enable=true
spring.mail.properties.mail.smtps.timeout=8000

########AWS S3 cloud storage https://medium.com/@mertcakmak2/object-storage-with-spring-boot-and-aws-s3-64448c91018f########
aws.access.key=${AWS_ACCESS_KEY}
aws.secret.key=${AWS_SECRET_KEY}
aws.s3.bucket=${AWS_S3_BUCKET_NAME}
#aws.s3.region=${AWS_S3_BUCKET_REGION}


######local storage######
local.storage.images=D:\\MyCoolCar\\storage\\images

##### to choose file storage service set: aws / gcp / local
file.service.provider=local


########JWT#######
jwt.expiration.time=300